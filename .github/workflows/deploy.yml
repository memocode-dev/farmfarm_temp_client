name: deloy

on:
  push:
    branches:
      - main

permissions: write-all

jobs:
  build:
    name: spring boot build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: jdk 17
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: 'gradle'
      - name: gradlew 실행 권한 부여
        run: chmod +x gradlew
      - name: gradle 테스트
        run: ./gradlew test --no-daemon
      - name: gradle 빌드
        run: ./gradlew build -x test --no-daemon
      - name: build 저장
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build
          retention-days: 1
  tag:
    outputs:
      tag_name: ${{ steps.tag_version.outputs.new_tag }}
      release_name: Release ${{ steps.tag_version.outputs.new_tag }}
      body: ${{ steps.tag_version.outputs.changelog }}
    name: 태그 생성
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  docker:
    name: 도커 이미지 빌드와 푸시
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - uses: actions/checkout@v3
      - name: build 가져오기
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: build
      - name: Docker Buildx 설치
        uses: docker/setup-buildx-action@v2
      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: memocode-dev
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 빌드 앤 푸시
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/memocode-dev/farmfarm_temp_client:${{ needs.tag.outputs.tag_name }}
            ghcr.io/memocode-dev/farmfarm_temp_client:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
  release:
    name: release 생성
    runs-on: ubuntu-latest
    needs: [ docker, tag ]
    steps:
      - uses: actions/checkout@v3
      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.tag_name }}
          release_name: ${{ needs.tag.outputs.release_name }}
          body: ${{ needs.tag.outputs.body }}
